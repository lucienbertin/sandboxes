@page "/weather"
@using Microsoft.EntityFrameworkCore
@using Shell.Models
@inject IDbContextFactory<BlazorDbContext> DbFactory

@attribute [StreamRendering]

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@if (forecasts is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th aria-label="Temperature in Celsius">Temp. (C)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<WeatherForecast>? forecasts;

    protected override async Task OnInitializedAsync()
    {
        var context = DbFactory.CreateDbContext();
        forecasts = new();
        foreach (int index in Enumerable.Range( 1, 7 )) {
            await Task.Delay(1000);
            forecasts.AddRange(await context.WeatherForecasts.ToListAsync());
            StateHasChanged();
        }
    }

}
