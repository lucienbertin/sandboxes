[package]
name = "shell"
version = "0.1.0"
edition = "2021"
default-run = "api"

[dependencies]
domain = { path = "../domain" }
dotenvy = "0.15.7"

tokio = { version = "1.44.1", features = ["rt-multi-thread", "macros"], optional = true }

rocket = { version = "0.5.1", features = ["json"], optional = true }
hmac = { version = "0.12.1", optional = true }
sha2 = { version = "0.10.8", optional = true }
serde = { version = "1.0", features = ["derive"], optional = true }
jwt = { version = "0.16.0", optional = true }
serde_json = { version = "1.0.140", optional = true }
geojson = { version = "0.24.2", features = ["geo-types"], optional = true }

diesel = { version = "2", features = ["postgres", "r2d2"], optional = true }
postgis_diesel = { version = "2", features = ["serde"], optional = true }
pq-sys = { version = "0.7", features = ["bundled"], optional = true }
openssl-sys = { version = "0.9", features = ["vendored"], optional = true }

r2d2 = { version = "0.8", optional = true }

lapin = { version = "2.5.2", optional = true }
async-global-executor = { version = "3.1.0", optional = true }
futures-lite = { version = "2.6.0", optional = true }

redis = { version = "0.29.2", features = ["r2d2"], optional = true }
rand = { version = "0.9.0", optional = true }

leptos = { version = "0.7.0", optional = true }
leptos_router = { version = "0.7.0", optional = true }
axum = { version = "0.7", optional = true }
console_error_panic_hook = { version = "0.1", optional = true}
leptos_axum = { version = "0.7.0", optional = true }
leptos_meta = { version = "0.7.0", optional = true }
wasm-bindgen = { version = "=0.2.100", optional = true }
# getrandom = { version = "0.3", features = ["wasm_js"], optional = true }

[features]
api = ["db", "redis", "rmqpub", "dep:rocket", "dep:hmac", "dep:sha2", "dep:jwt", "dep:serde", "dep:serde_json", "dep:geojson"] # rest api web exposition
rmqsub = ["db", "redis", "dep:tokio", "dep:lapin", "dep:serde", "dep:serde_json", "dep:geojson", "dep:r2d2", "dep:futures-lite"] # rmq subscriber worker
appssr = [
    "dep:axum",
    "dep:tokio",
    "dep:leptos",
    "dep:leptos_axum",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "dep:serde",
    "db",
]
appcsr = [
    "dep:leptos",
    "dep:leptos_meta",
    "dep:leptos_router",
    "dep:console_error_panic_hook",
    "dep:wasm-bindgen",
    "leptos/hydrate",
    "dep:serde",
]

redis = ["dep:redis", "dep:rand"] # redis adapter
rmqpub = ["dep:lapin", "dep:serde", "dep:serde_json", "dep:r2d2", "dep:async-global-executor"] # rmq publisher adapter
db = ["dep:diesel", "dep:postgis_diesel", "dep:pq-sys", "dep:openssl-sys", "dep:r2d2", "dep:geojson"] # db adapter
# default=["appssr"]

[[bin]]
name="api"
path="src/main-api.rs"
required-features = ["api"]

[[bin]]
name="worker"
path="src/main-worker.rs"
required-features = ["rmqsub"]

[[bin]]
name="shell" # must have same name as project or leptos throws error
path="src/main-app.rs"
required-features = ["appssr"]

[lib]
crate-type = ["cdylib", "rlib"]
required-features = ["appcsr"]